
_G.STYLEBLANK = [[
#nav {
    margin: 0 auto;
    width: 860px;
}

#nav ul {
    list-style: none;
}

#nav li {
    float:left;
}

#nav a {
    float:left;
    padding: .8em 1.5em;
    text-decoration: none;
    color: #555;
    text-shadow: 0 1px 0 rgba(255,255,255,.5);
    font: bold 1.1em/1 'trebuchet MS', Arial, Helvetica;
    letter-spacing: 1px;
    text-transform: uppercase;
    border-width: 1px;
    border-style: solid;
    border-color: #COLORBORDER1 #ccc #999 #eee;
    background: #COLORHEAD2;
    background: -moz-linear-gradient(#COLORBACK2, #COLORHEAD2);
    background: -webkit-linear-gradient(#COLORBACK2, #COLORHEAD2);
    background: -o-linear-gradient(#COLORBACK2, #COLORHEAD2);
    background: linear-gradient(#COLORBACK2, #COLORHEAD2);

    background: -ms-linear-gradient(#COLORBACK2, #COLORHEAD2);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#COLORBACK2', endColorstr='#COLORHEAD2',GradientType=0);
}

#nav a:hover, #nav a:focus {
    outline: 0;
    color: #HOVERTXT1;
    text-shadow: 0 1px 0 rgba(0,0,0,.2);
    background: #HOVERCOLOR1;
    background: -moz-linear-gradient(#COLORHEAD2, #HOVERCOLOR1);
    background: -webkit-linear-gradient(#COLORHEAD2, #HOVERCOLOR1);
    background: -o-linear-gradient(#COLORHEAD2, #HOVERCOLOR1);
    background: linear-gradient(#COLORHEAD2, #HOVERCOLOR1);

    background: -ms-linear-gradient(#COLORHEAD2, #HOVERCOLOR1);
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#COLORHEAD2', endColorstr='#HOVERCOLOR1',GradientType=0);
}

#nav a:active {
    box-shadow: 0 0 2px 2px rgba(0,0,0,.3) inset;
}

#nav li:first-child a {
    border-left: 0;
    border-radius: 4px 0 0 4px;
}

#nav li:last-child a {
    border-right: 0;
    border-radius: 0 4px 4px 0;
}

a.selected{
    background: -moz-linear-gradient(#COLORHEAD2,#COLORBACK2)!important;
    background: -webkit-linear-gradient(#COLORHEAD2,#COLORBACK2)!important;
    background: -o-linear-gradient(#COLORHEAD2,#COLORBACK2)!important;
    background: linear-gradient(#COLORHEAD2,#COLORBACK2)!important;

    background: -ms-linear-gradient(#COLORHEAD2,#COLORBACK2)!important;
    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#COLORHEAD2', endColorstr='#COLORBACK2',GradientType=0 )!important;
}

* {	padding: 0; margin: 0; vertical-align: top; }

body {
	background: url(background.png) repeat-x;
	font: 18px/1.5em "proxima-nova", Helvetica, Arial, sans-serif;
}

a {	color: #069; }
a:hover { color: #28b; }

h2 {
	margin-top: 15px;
	font: normal 32px "omnes-pro", Helvetica, Arial, sans-serif;
}

h3 {
	margin-left: 30px;
	font: normal 26px "omnes-pro", Helvetica, Arial, sans-serif;
	color: #666;
}

p {
	margin-top: 10px;
}

button {
	font-size: 18px;
	padding: 1px 7px;
}

input {
	font-size: 18px;
}

input[type=checkbox] {
	margin: 7px;
}

#maincontent {
	color: #555;
	background: #COLOR3;
	background: linear-gradient(#COLORBACK2 , #COLORTIME );
	background: -o-linear-gradient(#COLORBACK2 , #COLORTIME );
	background: -ms-linear-gradient(#COLORBACK2 , #COLORTIME );
	background: -moz-linear-gradient(#COLORBACK2 , #COLORTIME );
	background: -webkit-linear-gradient(#COLORBACK2 , #COLORTIME );
}

#header {
	position: relative;
	width: 900px;
	margin: auto;
}

#header h2 {
	margin-left: 10px;
	vertical-align: middle;
	font-size: 42px;
	font-weight: bold;
	text-decoration: none;
	color: #000;
}

#content {
	width: 880px;
	margin: 0 auto;
	padding: 10px;
}

#footer {
	margin-top: 25px;
	margin-bottom: 10px;
	text-align: center;
	font-size: 12px;
	color: #999;
}

.demo-container {
	box-sizing: border-box;
	width: 850px;
	height: 450px;
	padding: 20px 15px 15px 15px;
	margin: 15px auto 30px auto;
	border: 1px solid #ddd;
	background: #fff;
	background: linear-gradient(#COLORBACK2 0, #COLORTIME 50px);
	background: -o-linear-gradient(#COLORBACK2 0, #COLORTIME 50px);
	background: -ms-linear-gradient(#COLORBACK2 0, #COLORTIME 50px);
	background: -moz-linear-gradient(#COLORBACK2 0, #COLORTIME 50px);
	background: -webkit-linear-gradient(#COLORBACK2 0, #COLORTIME 50px);
	box-shadow: 0 3px 10px rgba(0,0,0,0.15);
	-o-box-shadow: 0 3px 10px rgba(0,0,0,0.1);
	-ms-box-shadow: 0 3px 10px rgba(0,0,0,0.1);
	-moz-box-shadow: 0 3px 10px rgba(0,0,0,0.1);
	-webkit-box-shadow: 0 3px 10px rgba(0,0,0,0.1);
}

.demo-placeholder {
	width: 100%;
	height: 100%;
	font-size: 14px;
	line-height: 1.2em;
}

.legend table {
	border-spacing: 5px;
}

#draggable { width: 150px; height: 200px; padding: 0.5em; }
  #draggable h3 { text-align: center; margin: 0; }
  #draggable2 { width: 700px; height: 500px; padding: 0.5em; }
  #draggable2 h3 { text-align: center; margin: 0; }
  .toggler {
    width: 500px;
    height: 200px;
  }
  #button {
    padding: .5em 1em;
    text-decoration: none;
  }

#maincontent {
    clear:both;
}

]]


function _G.connect()
	local s,err = ba.socket.connect("127.0.0.1",9696)
	if s then
		_G.TCPcon = s
	end
	if err then
	   _G.print(err)
	   return false
	else
		return true
	end
end

function _G.TCPcommand(command,t)
	if not command then return nil,"no command" end
	if TCPcon then
		TCPcon:write(command.."\n")
		local d,err
		d,err = TCPcon:read(10000) -- Wait a maximum of 10 seconds for response
		if d then
			d = string.gsub(d,'[\n]','<br>')
			return d
		elseif err then
			if err == "timeout" then
				TCPcon:close()
				if connect() then
					return TCPcommand(command,true)
				else
					return nil,"No TCP connection..."
				end
			else
				return nil,err
			end
		end
	elseif t == nil then
		if connect() then
			return TCPcommand(command,true)
		else
			return nil,"No TCP connection..."
		end
	else
		return nil,"No TCP connection..."
	end
end



function getConnected()
	local s,err = ba.socket.connect("127.0.0.1",9696)
	if s then
		return s
	end
	return nil
end

function _G.TCPcommand2(command)
	if not command then return nil,"no command" end
	local s = getConnected()
	if s then
		s:write(command.."\n")
		local d,err = s:read(10000)
		s:close()
		if d then
			d = string.gsub(d,'[\n]','<br>')
			return d
		elseif err then
			return nil,(err or 'error')
		end
	else
		return nil,"No TCP connection..."
	end
end
